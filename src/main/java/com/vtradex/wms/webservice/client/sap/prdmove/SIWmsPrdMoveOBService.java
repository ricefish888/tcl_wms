package com.vtradex.wms.webservice.client.sap.prdmove;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2017-08-02T16:58:04.527+08:00
 * Generated source version: 2.6.2
 * 
 */
@WebServiceClient(name = "SI_Wms_Prd_Move_OBService", 
                  wsdlLocation = "/Users/administrator/workspace/tcl_wms/src/main/resources/wsdl/prdMove.wsdl",
                  targetNamespace = "https://wms.tcl.com/prd_move") 
public class SIWmsPrdMoveOBService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://wms.tcl.com/prd_move", "SI_Wms_Prd_Move_OBService");
    public final static QName HTTPSPort = new QName("https://wms.tcl.com/prd_move", "HTTPS_Port");
    public final static QName HTTPPort = new QName("https://wms.tcl.com/prd_move", "HTTP_Port");
    static {
        URL url = SIWmsPrdMoveOBService.class.getResource("/Users/administrator/workspace/tcl_wms/src/main/resources/wsdl/prdMove.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(SIWmsPrdMoveOBService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "/Users/administrator/workspace/tcl_wms/src/main/resources/wsdl/prdMove.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public SIWmsPrdMoveOBService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SIWmsPrdMoveOBService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SIWmsPrdMoveOBService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns SIWmsPrdMoveOB
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIWmsPrdMoveOB getHTTPSPort() {
        return super.getPort(HTTPSPort, SIWmsPrdMoveOB.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIWmsPrdMoveOB
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIWmsPrdMoveOB getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, SIWmsPrdMoveOB.class, features);
    }
    /**
     *
     * @return
     *     returns SIWmsPrdMoveOB
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIWmsPrdMoveOB getHTTPPort() {
        return super.getPort(HTTPPort, SIWmsPrdMoveOB.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIWmsPrdMoveOB
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIWmsPrdMoveOB getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, SIWmsPrdMoveOB.class, features);
    }

}
