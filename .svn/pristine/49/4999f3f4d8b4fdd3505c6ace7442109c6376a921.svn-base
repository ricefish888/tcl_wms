打印("R101_补货_拣货分配规则")

返回列表 = 创建列表()
补货流向集 = 多值查表(组织,"R101_补货_补货流向规则表",货主名称,货品代码,货品名称,补货区)
如果(补货流向集 == 空){
   异常("R101_补货_补货流向规则表 未找到数据!"+"货主名称: "+货主名称+"货品代码: "+货品代码+"货品名称: "+货品名称+"补货区: "+补货区)
}
$未拣选数量 = 计划补货数量
每个($补货流向 : 补货流向集){

  打印("补货流向.拣货区: "+$补货流向.补货拣货区)
  打印("补货流向.库存状态: "+$补货流向.库存状态)


  $状态拼接条件 = 集合查询拼接("INV.STATUS IN" ,$补货流向.库存状态)
  打印("状态拼接条件 ："+$状态拼接条件)

  $拣货库存结果集 = 数据查询(模型,组织,"R101_补货_拣货分配库存数据源", "仓库ID", 仓库ID,"拣货库位定位分类", $补货流向.补货拣货区,"货品ID",货品ID,"货主ID",货主ID,"状态拼接条件",$状态拼接条件)
  打印("拣货库存结果集"+$拣货库存结果集)
  如果($拣货库存结果集 != 空){
    如果(列表大小($拣货库存结果集) != 0){
      
	列表对象排序($拣货库存结果集.库存, "库存数量", "升序")
	
	每个($库存 : $拣货库存结果集.库存){
	   
	   如果($未拣选数量 > 0 && $库存.库存数量 > 0){
		$返回对象 = 创建对象()

		$返回对象.库存ID = $库存.库存ID
		$返回对象.库位ID = $库存.库位ID
		$返回对象.补货上架区 = 补货区
		$返回对象.分配数量 = 0
		
		如果($库存.件装量 <= 1){//基本包装计算

		        如果($未拣选数量 > $库存.库存数量) {

				$返回对象.分配数量 = $库存.库存数量 
				$未拣选数量 = $未拣选数量 - $库存.库存数量
				$库存.库存数量 = 0
			}

			如果($未拣选数量 <= $库存.库存数量) {

				$返回对象.分配数量 = $未拣选数量
				$库存.库存数量 = $库存.库存数量 - $未拣选数量
				$未拣选数量 = 0
			}
			加入列表(返回列表, $返回对象)
		}
			
		//此处计算因包装折算系数问题 将会导致库存会出现部分分配情况
		如果($库存.件装量 > 1){//需要考虑不能拆包装分配，必须整包装分配

			$折算未拣选数量 = $未拣选数量/$库存.件装量
			$折算未拣选数量 = 舍尾取整($折算未拣选数量)
			打印("折算未拣选数量---"+$折算未拣选数量)
			$包装未拣选数量 = $折算未拣选数量 * $库存.件装量 //未拣选数量的折算最大包装数量


			$库存折算数量 = $库存.库存数量/$库存.件装量
			$库存折算数量 = 舍尾取整($库存折算数量)
			打印("库存折算数量---"+$库存折算数量)
			$库存包装数量 = $库存折算数量 * $库存.件装量 //库存最大可拣选的整包装数量
			
			如果($库存包装数量 > 0 && $包装未拣选数量 > $库存包装数量){

				$返回对象.分配数量 = $库存包装数量 
				$未拣选数量 = $未拣选数量 - $库存包装数量 
				$库存.库存数量 = 0
			}

			如果($库存包装数量 > 0 && $包装未拣选数量 <= $库存包装数量){
				
				$返回对象.分配数量 = $包装未拣选数量
				$库存.库存数量 = $库存.库存数量 - $包装未拣选数量
				$未拣选数量 = $未拣选数量 - $包装未拣选数量
			}
			加入列表(返回列表, $返回对象)
		}
	   }
	}
    }
  }
}

如果(列表大小(返回列表) == 0){
 异常("未获取到可分配的待补库存!")
}